// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var HandleLiteral$Jeason = require("./HandleLiteral.bs.js");

function mapper(state, param) {
  var expression = param[1];
  if (typeof expression === "number") {
    return state;
  } else {
    switch (expression.tag | 0) {
      case 12 : 
          var match = expression[0];
          var tmp = match[/* callee */0][1];
          if (typeof tmp === "number" || tmp.tag !== 17) {
            return state;
          } else {
            List.map((function (argument) {
                    if (argument.tag) {
                      return state;
                    } else {
                      return mapper(state, argument[0]);
                    }
                  }), match[/* arguments */1]);
            return /* record */[
                    /* identifiers */state[/* identifiers */0],
                    /* outputStatements : :: */[
                      /* ExternalModule */1,
                      state[/* outputStatements */1]
                    ]
                  ];
          }
      case 18 : 
          return HandleLiteral$Jeason.h(state, expression[0]);
      default:
        return state;
    }
  }
}

exports.mapper = mapper;
/* No side effect */
